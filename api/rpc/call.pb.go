// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.1
// source: rpc/call.proto

package rpc

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Req struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SrcService    string                 `protobuf:"bytes,1,opt,name=srcService,proto3" json:"srcService,omitempty"`
	MsgId         string                 `protobuf:"bytes,2,opt,name=msgId,proto3" json:"msgId,omitempty"`
	MsgContent    [][]byte               `protobuf:"bytes,3,rep,name=msgContent,proto3" json:"msgContent,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Req) Reset() {
	*x = Req{}
	mi := &file_rpc_call_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Req) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Req) ProtoMessage() {}

func (x *Req) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_call_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Req.ProtoReflect.Descriptor instead.
func (*Req) Descriptor() ([]byte, []int) {
	return file_rpc_call_proto_rawDescGZIP(), []int{0}
}

func (x *Req) GetSrcService() string {
	if x != nil {
		return x.SrcService
	}
	return ""
}

func (x *Req) GetMsgId() string {
	if x != nil {
		return x.MsgId
	}
	return ""
}

func (x *Req) GetMsgContent() [][]byte {
	if x != nil {
		return x.MsgContent
	}
	return nil
}

type TraceInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Traceid       int64                  `protobuf:"varint,1,opt,name=traceid,proto3" json:"traceid,omitempty"`
	Spanid        int64                  `protobuf:"varint,2,opt,name=spanid,proto3" json:"spanid,omitempty"`
	Sample        bool                   `protobuf:"varint,3,opt,name=sample,proto3" json:"sample,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TraceInfo) Reset() {
	*x = TraceInfo{}
	mi := &file_rpc_call_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TraceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TraceInfo) ProtoMessage() {}

func (x *TraceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_call_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TraceInfo.ProtoReflect.Descriptor instead.
func (*TraceInfo) Descriptor() ([]byte, []int) {
	return file_rpc_call_proto_rawDescGZIP(), []int{1}
}

func (x *TraceInfo) GetTraceid() int64 {
	if x != nil {
		return x.Traceid
	}
	return 0
}

func (x *TraceInfo) GetSpanid() int64 {
	if x != nil {
		return x.Spanid
	}
	return 0
}

func (x *TraceInfo) GetSample() bool {
	if x != nil {
		return x.Sample
	}
	return false
}

type StreamReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SrcService    string                 `protobuf:"bytes,1,opt,name=srcService,proto3" json:"srcService,omitempty"`
	MsgId         string                 `protobuf:"bytes,2,opt,name=msgId,proto3" json:"msgId,omitempty"`
	MsgContent    [][]byte               `protobuf:"bytes,3,rep,name=msgContent,proto3" json:"msgContent,omitempty"`
	ReqId         string                 `protobuf:"bytes,4,opt,name=reqId,proto3" json:"reqId,omitempty"`
	Traceinfo     *TraceInfo             `protobuf:"bytes,5,opt,name=traceinfo,proto3" json:"traceinfo,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamReq) Reset() {
	*x = StreamReq{}
	mi := &file_rpc_call_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamReq) ProtoMessage() {}

func (x *StreamReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_call_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamReq.ProtoReflect.Descriptor instead.
func (*StreamReq) Descriptor() ([]byte, []int) {
	return file_rpc_call_proto_rawDescGZIP(), []int{2}
}

func (x *StreamReq) GetSrcService() string {
	if x != nil {
		return x.SrcService
	}
	return ""
}

func (x *StreamReq) GetMsgId() string {
	if x != nil {
		return x.MsgId
	}
	return ""
}

func (x *StreamReq) GetMsgContent() [][]byte {
	if x != nil {
		return x.MsgContent
	}
	return nil
}

func (x *StreamReq) GetReqId() string {
	if x != nil {
		return x.ReqId
	}
	return ""
}

func (x *StreamReq) GetTraceinfo() *TraceInfo {
	if x != nil {
		return x.Traceinfo
	}
	return nil
}

type JsonReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SrcService    string                 `protobuf:"bytes,1,opt,name=srcService,proto3" json:"srcService,omitempty"`
	MsgId         string                 `protobuf:"bytes,2,opt,name=msgId,proto3" json:"msgId,omitempty"`
	MsgContent    string                 `protobuf:"bytes,3,opt,name=msgContent,proto3" json:"msgContent,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JsonReq) Reset() {
	*x = JsonReq{}
	mi := &file_rpc_call_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JsonReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JsonReq) ProtoMessage() {}

func (x *JsonReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_call_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JsonReq.ProtoReflect.Descriptor instead.
func (*JsonReq) Descriptor() ([]byte, []int) {
	return file_rpc_call_proto_rawDescGZIP(), []int{3}
}

func (x *JsonReq) GetSrcService() string {
	if x != nil {
		return x.SrcService
	}
	return ""
}

func (x *JsonReq) GetMsgId() string {
	if x != nil {
		return x.MsgId
	}
	return ""
}

func (x *JsonReq) GetMsgContent() string {
	if x != nil {
		return x.MsgContent
	}
	return ""
}

type JsonRsp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MsgId         string                 `protobuf:"bytes,2,opt,name=msgId,proto3" json:"msgId,omitempty"`
	MsgContent    string                 `protobuf:"bytes,3,opt,name=msgContent,proto3" json:"msgContent,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JsonRsp) Reset() {
	*x = JsonRsp{}
	mi := &file_rpc_call_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JsonRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JsonRsp) ProtoMessage() {}

func (x *JsonRsp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_call_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JsonRsp.ProtoReflect.Descriptor instead.
func (*JsonRsp) Descriptor() ([]byte, []int) {
	return file_rpc_call_proto_rawDescGZIP(), []int{4}
}

func (x *JsonRsp) GetMsgId() string {
	if x != nil {
		return x.MsgId
	}
	return ""
}

func (x *JsonRsp) GetMsgContent() string {
	if x != nil {
		return x.MsgContent
	}
	return ""
}

type Rsp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MsgId         string                 `protobuf:"bytes,1,opt,name=msgId,proto3" json:"msgId,omitempty"`
	MsgContent    [][]byte               `protobuf:"bytes,2,rep,name=msgContent,proto3" json:"msgContent,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Rsp) Reset() {
	*x = Rsp{}
	mi := &file_rpc_call_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Rsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rsp) ProtoMessage() {}

func (x *Rsp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_call_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rsp.ProtoReflect.Descriptor instead.
func (*Rsp) Descriptor() ([]byte, []int) {
	return file_rpc_call_proto_rawDescGZIP(), []int{5}
}

func (x *Rsp) GetMsgId() string {
	if x != nil {
		return x.MsgId
	}
	return ""
}

func (x *Rsp) GetMsgContent() [][]byte {
	if x != nil {
		return x.MsgContent
	}
	return nil
}

type StreamRsp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MsgId         string                 `protobuf:"bytes,1,opt,name=msgId,proto3" json:"msgId,omitempty"`
	MsgContent    [][]byte               `protobuf:"bytes,2,rep,name=msgContent,proto3" json:"msgContent,omitempty"`
	ReqId         string                 `protobuf:"bytes,3,opt,name=reqId,proto3" json:"reqId,omitempty"`
	Spnid         int64                  `protobuf:"varint,4,opt,name=spnid,proto3" json:"spnid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamRsp) Reset() {
	*x = StreamRsp{}
	mi := &file_rpc_call_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamRsp) ProtoMessage() {}

func (x *StreamRsp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_call_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamRsp.ProtoReflect.Descriptor instead.
func (*StreamRsp) Descriptor() ([]byte, []int) {
	return file_rpc_call_proto_rawDescGZIP(), []int{6}
}

func (x *StreamRsp) GetMsgId() string {
	if x != nil {
		return x.MsgId
	}
	return ""
}

func (x *StreamRsp) GetMsgContent() [][]byte {
	if x != nil {
		return x.MsgContent
	}
	return nil
}

func (x *StreamRsp) GetReqId() string {
	if x != nil {
		return x.ReqId
	}
	return ""
}

func (x *StreamRsp) GetSpnid() int64 {
	if x != nil {
		return x.Spnid
	}
	return 0
}

var File_rpc_call_proto protoreflect.FileDescriptor

const file_rpc_call_proto_rawDesc = "" +
	"\n" +
	"\x0erpc/call.proto\x12\x03rpc\x1a\x1cgoogle/api/annotations.proto\"[\n" +
	"\x03Req\x12\x1e\n" +
	"\n" +
	"srcService\x18\x01 \x01(\tR\n" +
	"srcService\x12\x14\n" +
	"\x05msgId\x18\x02 \x01(\tR\x05msgId\x12\x1e\n" +
	"\n" +
	"msgContent\x18\x03 \x03(\fR\n" +
	"msgContent\"U\n" +
	"\tTraceInfo\x12\x18\n" +
	"\atraceid\x18\x01 \x01(\x03R\atraceid\x12\x16\n" +
	"\x06spanid\x18\x02 \x01(\x03R\x06spanid\x12\x16\n" +
	"\x06sample\x18\x03 \x01(\bR\x06sample\"\xa5\x01\n" +
	"\tStreamReq\x12\x1e\n" +
	"\n" +
	"srcService\x18\x01 \x01(\tR\n" +
	"srcService\x12\x14\n" +
	"\x05msgId\x18\x02 \x01(\tR\x05msgId\x12\x1e\n" +
	"\n" +
	"msgContent\x18\x03 \x03(\fR\n" +
	"msgContent\x12\x14\n" +
	"\x05reqId\x18\x04 \x01(\tR\x05reqId\x12,\n" +
	"\ttraceinfo\x18\x05 \x01(\v2\x0e.rpc.TraceInfoR\ttraceinfo\"_\n" +
	"\aJsonReq\x12\x1e\n" +
	"\n" +
	"srcService\x18\x01 \x01(\tR\n" +
	"srcService\x12\x14\n" +
	"\x05msgId\x18\x02 \x01(\tR\x05msgId\x12\x1e\n" +
	"\n" +
	"msgContent\x18\x03 \x01(\tR\n" +
	"msgContent\"?\n" +
	"\aJsonRsp\x12\x14\n" +
	"\x05msgId\x18\x02 \x01(\tR\x05msgId\x12\x1e\n" +
	"\n" +
	"msgContent\x18\x03 \x01(\tR\n" +
	"msgContent\";\n" +
	"\x03Rsp\x12\x14\n" +
	"\x05msgId\x18\x01 \x01(\tR\x05msgId\x12\x1e\n" +
	"\n" +
	"msgContent\x18\x02 \x03(\fR\n" +
	"msgContent\"m\n" +
	"\tStreamRsp\x12\x14\n" +
	"\x05msgId\x18\x01 \x01(\tR\x05msgId\x12\x1e\n" +
	"\n" +
	"msgContent\x18\x02 \x03(\fR\n" +
	"msgContent\x12\x14\n" +
	"\x05reqId\x18\x03 \x01(\tR\x05reqId\x12\x14\n" +
	"\x05spnid\x18\x04 \x01(\x03R\x05spnid2\xc3\x01\n" +
	"\rRouterService\x12F\n" +
	"\vJsonMessage\x12\f.rpc.JsonReq\x1a\f.rpc.JsonRsp\"\x1b\x82\xd3\xe4\x93\x02\x15:\x01*\"\x10/rpc/JsonMessage\x126\n" +
	"\aRpcCall\x12\b.rpc.Req\x1a\b.rpc.Rsp\"\x17\x82\xd3\xe4\x93\x02\x11:\x01*\"\f/rpc/RpcCall\x122\n" +
	"\n" +
	"StreamCall\x12\x0e.rpc.StreamReq\x1a\x0e.rpc.StreamRsp\"\x00(\x010\x01Bj\n" +
	"\x18io.tpf.service.rpc.protoB\x13TpfServiceCallProtoP\x01Z7github.com/go-kratos/kratos/v2/api/proto/kratos/api;rpcb\x06proto3"

var (
	file_rpc_call_proto_rawDescOnce sync.Once
	file_rpc_call_proto_rawDescData []byte
)

func file_rpc_call_proto_rawDescGZIP() []byte {
	file_rpc_call_proto_rawDescOnce.Do(func() {
		file_rpc_call_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_rpc_call_proto_rawDesc), len(file_rpc_call_proto_rawDesc)))
	})
	return file_rpc_call_proto_rawDescData
}

var file_rpc_call_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_rpc_call_proto_goTypes = []any{
	(*Req)(nil),       // 0: rpc.Req
	(*TraceInfo)(nil), // 1: rpc.TraceInfo
	(*StreamReq)(nil), // 2: rpc.StreamReq
	(*JsonReq)(nil),   // 3: rpc.JsonReq
	(*JsonRsp)(nil),   // 4: rpc.JsonRsp
	(*Rsp)(nil),       // 5: rpc.Rsp
	(*StreamRsp)(nil), // 6: rpc.StreamRsp
}
var file_rpc_call_proto_depIdxs = []int32{
	1, // 0: rpc.StreamReq.traceinfo:type_name -> rpc.TraceInfo
	3, // 1: rpc.RouterService.JsonMessage:input_type -> rpc.JsonReq
	0, // 2: rpc.RouterService.RpcCall:input_type -> rpc.Req
	2, // 3: rpc.RouterService.StreamCall:input_type -> rpc.StreamReq
	4, // 4: rpc.RouterService.JsonMessage:output_type -> rpc.JsonRsp
	5, // 5: rpc.RouterService.RpcCall:output_type -> rpc.Rsp
	6, // 6: rpc.RouterService.StreamCall:output_type -> rpc.StreamRsp
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_rpc_call_proto_init() }
func file_rpc_call_proto_init() {
	if File_rpc_call_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_rpc_call_proto_rawDesc), len(file_rpc_call_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rpc_call_proto_goTypes,
		DependencyIndexes: file_rpc_call_proto_depIdxs,
		MessageInfos:      file_rpc_call_proto_msgTypes,
	}.Build()
	File_rpc_call_proto = out.File
	file_rpc_call_proto_goTypes = nil
	file_rpc_call_proto_depIdxs = nil
}
